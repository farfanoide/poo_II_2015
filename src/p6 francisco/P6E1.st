Object subclass: #CuentaBancaria	instanceVariableNames: 'saldo'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica6-Ejercicio 1'!!CuentaBancaria commentStamp: '<historical>' prior: 0!Clase CuentaBancaria!!CuentaBancaria methodsFor: 'operaciones' stamp: ' 6/5/15 16:09'!realizarExtraccion: unMonto	saldo:= saldo - unMonto! !!CuentaBancaria methodsFor: 'operaciones' stamp: 'francisco 6/6/2015 13:26'!extraer: unMonto 		(self saldo >= unMonto) ifTrue: [self realizarExtraccion: unMonto].! !!CuentaBancaria methodsFor: 'operaciones' stamp: ' 6/5/15 16:09'!depositar: unMonto	saldo:= saldo + unMonto.! !!CuentaBancaria methodsFor: 'testing' stamp: ' 6/5/15 16:09'!verificarCondicionesDeExtraccion: unMonto 	^true! !!CuentaBancaria methodsFor: 'initialize-release' stamp: 'francisco 6/6/2015 13:19'!initialize	saldo:= 0.! !!CuentaBancaria methodsFor: 'accessing' stamp: ' 6/5/15 16:09'!saldo	^saldo! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CuentaBancaria class	instanceVariableNames: ''!!CuentaBancaria class methodsFor: 'inicializar' stamp: 'francisco 6/6/2015 13:20'!new	^(super new) initialize.! !TestCase subclass: #CajaAhorroTest	instanceVariableNames: 'cajaAhorro'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica6-Ejercicio 1'!!CajaAhorroTest methodsFor: 'testing' stamp: ' 6/5/15 16:10'!testDepositar	self assert: cajaAhorro saldo = 0.	cajaAhorro depositar: 0.	self assert: cajaAhorro saldo = 0.	cajaAhorro depositar: 100.	self assert: cajaAhorro saldo = 100.	cajaAhorro depositar:120.	self assert: cajaAhorro saldo = 220.! !!CajaAhorroTest methodsFor: 'testing' stamp: ' 6/5/15 16:10'!testExtraer	self assert: cajaAhorro saldo = 0.	cajaAhorro extraer: 10.	self assert: cajaAhorro saldo = 0.	cajaAhorro depositar: 100.	cajaAhorro extraer: 120.	self assert: cajaAhorro saldo = 100.	cajaAhorro extraer: 20.	self assert: cajaAhorro saldo = 80.	cajaAhorro extraer: 80.	self assert: cajaAhorro saldo = 0.! !!CajaAhorroTest methodsFor: 'running' stamp: 'francisco 6/6/2015 12:59'!setUp	cajaAhorro := CajaDeAhorro new.! !!CajaAhorroTest methodsFor: 'accessing' stamp: ' 6/5/15 16:10'!cajaAhorro: aCuentaBancaria	cajaAhorro := aCuentaBancaria! !!CajaAhorroTest methodsFor: 'accessing' stamp: ' 6/5/15 16:10'!cajaAhorro	^cajaAhorro! !CuentaBancaria subclass: #CajaDeAhorro	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica6-Ejercicio 1'!!CajaDeAhorro commentStamp: '<historical>' prior: 0!Clase Caja De Ahorro subClase de CuentaBancaria!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CajaDeAhorro class	instanceVariableNames: ''!!CajaDeAhorro class methodsFor: 'as yet unclassified' stamp: 'francisco 6/6/2015 13:21'!new	^(super new) initialize.! !TestCase subclass: #CuentaCorrienteTest	instanceVariableNames: 'sinLimite limiteCien'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica6-Ejercicio 1'!!CuentaCorrienteTest methodsFor: 'accessing' stamp: ' 6/5/15 16:09'!sinLimite: aCuentaBancaria	sinLimite := aCuentaBancaria! !!CuentaCorrienteTest methodsFor: 'accessing' stamp: ' 6/5/15 16:09'!sinLimite	^sinLimite! !!CuentaCorrienteTest methodsFor: 'accessing' stamp: 'francisco 6/6/2015 12:53'!rojoPermitido: aNumber	rojoPermitido := aNumber! !!CuentaCorrienteTest methodsFor: 'accessing' stamp: ' 6/5/15 16:09'!limiteCien	^limiteCien! !!CuentaCorrienteTest methodsFor: 'accessing' stamp: ' 6/5/15 16:09'!limiteCien: aCuentaBancaria	limiteCien := aCuentaBancaria! !!CuentaCorrienteTest methodsFor: 'accessing' stamp: 'francisco 6/6/2015 12:53'!rojoPermitido	^rojoPermitido! !!CuentaCorrienteTest methodsFor: 'testing' stamp: ' 6/5/15 16:09'!testDepositar	self assert: sinLimite saldo = 0.	sinLimite depositar: 0.	self assert: sinLimite saldo = 0.	sinLimite depositar: 100.	self assert: sinLimite saldo = 100.	sinLimite depositar:120.	self assert: sinLimite saldo = 220.! !!CuentaCorrienteTest methodsFor: 'testing' stamp: ' 6/5/15 16:09'!testExtraer	self assert: sinLimite saldo = 0.	sinLimite extraer: 10.	self assert: sinLimite saldo = 0.	sinLimite depositar: 100.	sinLimite extraer: 120.	self assert: sinLimite saldo = 100.	sinLimite extraer: 20.	self assert: sinLimite saldo = 80.	sinLimite extraer: 80.	self assert: sinLimite saldo = 0.	self assert: limiteCien saldo = 0.	limiteCien extraer: 10.	self assert: limiteCien saldo = -10.	limiteCien depositar: 100.	self assert: limiteCien saldo = 90.	limiteCien extraer: 220.	self assert: limiteCien saldo = 90.	limiteCien extraer: 190.	self assert: limiteCien saldo = -100.	limiteCien extraer: 190.	self assert: limiteCien saldo = -100.! !!CuentaCorrienteTest methodsFor: 'running' stamp: 'francisco 6/6/2015 12:56'!setUp	sinLimite := CuentaCorriente  new.	limiteCien := CuentaCorriente new.	limiteCien rojoPermitido: 100.! !CuentaBancaria subclass: #CuentaCorriente	instanceVariableNames: 'rojoPermitido'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica6-Ejercicio 1'!!CuentaCorriente commentStamp: '<historical>' prior: 0!Clase CuentaCorrient subClase de CuentaBancaria!!CuentaCorriente methodsFor: 'accessing' stamp: 'francisco 6/6/2015 13:46'!initialize	super initialize .	rojoPermitido:=0.! !!CuentaCorriente methodsFor: 'accessing' stamp: 'francisco 6/6/2015 13:56'!extraer: unMonto 	(self saldo + rojoPermitido >= unMonto) ifTrue: [self realizarExtraccion: unMonto].! !!CuentaCorriente methodsFor: 'accessing' stamp: 'francisco 6/6/2015 12:57'!rojoPermitido: anObject	rojoPermitido := anObject! !!CuentaCorriente methodsFor: 'accessing' stamp: 'francisco 6/6/2015 12:57'!rojoPermitido	^ rojoPermitido! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CuentaCorriente class	instanceVariableNames: ''!!CuentaCorriente class methodsFor: 'as yet unclassified' stamp: 'francisco 6/6/2015 13:45'!new	^ (super new) initialize.! !