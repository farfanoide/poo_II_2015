Object subclass: #StateMachine	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica3-Ejercicio 2'!!StateMachine commentStamp: '<historical>' prior: 0!Estados de la vendingMachine!!StateMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/19/2015 16:05'!comprar: cantidadDeBotellas machine: aMachine    "Define la cantidad de botellas que el cliente desea comprar. Devuelve true    si es posible hacer la compra, false caso contrario. "^self subclassResponsibility .! !!StateMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/19/2015 16:05'!confirmarCompra    "Una vez que el dinero fue ingresado, el cliente confirma que desea hacer    la compra. La máquina actualiza el stock y el dinero. "^self subclassResponsibility .! !!StateMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/19/2015 16:05'!cancelarCompra"cancela la compra sea cual sea su estado"^self subclassResponsibility .! !!StateMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/19/2015 16:05'!ingresar: unaMoneda machine: AMachine    "El cliente ingresa en la máquina una moneda de la denominación indicada.    Devuelve true cuando alcanzó o superó el costo de la compra, false en caso    contrario."^self subclassResponsibility .! !StateMachine subclass: #ReadyMachine	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica3-Ejercicio 2'!!ReadyMachine commentStamp: '<historical>' prior: 0!Clase en la que la maquina se encuentra lista y en espera de que el cliente ingrese la cantidad de bebidas!!ReadyMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/16/2015 18:13'!confirmarCompra    "Una vez que el dinero fue ingresado, el cliente confirma que desea hacer    la compra. La máquina actualiza el stock y el dinero. "! !!ReadyMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/18/2015 09:35'!ingresar: unaMoneda machine: AMachine    "El cliente ingresa en la máquina una moneda de la denominación indicada.    Devuelve true cuando alcanzó o superó el costo de la compra, false en caso    contrario."	Transcript show: 'No es posible ingresar una moneda en este momento... Ingrese la cantidad de bebidas que desea'.      Transcript cr.	Transcript cr.! !!ReadyMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/19/2015 16:20'!comprar: cantidadDeBotellas machine: aMachine    "Define la cantidad de botellas que el cliente desea comprar. Devuelve true    si es posible hacer la compra, false caso contrario. "   (aMachine stock >= cantidadDeBotellas)ifTrue: [ 		aMachine cantBotellas: cantidadDeBotellas . 		aMachine state: WaitingCoinMachine new.	].^(aMachine stock >= cantidadDeBotellas).	! !!ReadyMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/16/2015 19:50'!cancelarCompra"cancela la compra sea cual sea su estado"Transcript show: 'La oprecion fue cancelada'.      Transcript cr.	Transcript cr.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ReadyMachine class	instanceVariableNames: ''!!ReadyMachine class methodsFor: 'as yet unclassified' stamp: 'francisco 5/19/2015 16:13'!newTranscript show: 'Ready...'.Transcript cr.Transcript cr.Transcript show: 'Ingrese la cantidad de bebidas.'.Transcript cr.Transcript cr.	^super new.	! !StateMachine subclass: #ConfirmMachine	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica3-Ejercicio 2'!!ConfirmMachine commentStamp: '<historical>' prior: 0!Estado en espera de confirmacion del cliente.!!ConfirmMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/18/2015 19:16'!comprar: cantidadDeBotellas machine: aMachine    "Define la cantidad de botellas que el cliente desea comprar. Devuelve true    si es posible hacer la compra, false caso contrario. "	Transcript show: 'No es posible ingresar cantidad de botellas en este momento... Debe CONFIRMAR o CANCELAR la operacion'.      Transcript cr.	Transcript cr.! !!ConfirmMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/16/2015 19:50'!cancelarCompra"cancela la compra sea cual sea su estado"	Transcript show: 'La oprecion fue cancelada'.      Transcript cr.	Transcript cr.! !!ConfirmMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/16/2015 18:17'!confirmarCompra    "Una vez que el dinero fue ingresado, el cliente confirma que desea hacer    la compra. La máquina actualiza el stock y el dinero. "! !!ConfirmMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/18/2015 09:35'!ingresar: unaMoneda machine: AMachine    "El cliente ingresa en la máquina una moneda de la denominación indicada.    Devuelve true cuando alcanzó o superó el costo de la compra, false en caso    contrario."	Transcript show: 'No es posible ingresar una moneda en este momento... Debe CONFIRMAR o CANCELAR la operacion'.      Transcript cr.	Transcript cr.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ConfirmMachine class	instanceVariableNames: ''!!ConfirmMachine class methodsFor: 'as yet unclassified' stamp: 'francisco 5/19/2015 16:12'!newTranscript show: 'OK...'.Transcript cr.	Transcript cr.Transcript show: 'Cancelar | Confirmar la opreacion.'.^ super new.	! !Object subclass: #VendingMachine	instanceVariableNames: 'state stock money cashIn cantBotellas precio'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica3-Ejercicio 2'!!VendingMachine commentStamp: '<historical>' prior: 0!Maquina Espendedora de botellas!!VendingMachine methodsFor: 'mensajes' stamp: 'francisco 5/19/2015 16:37'!costoTotal    "Devuelve el monto total que el cliente debe pagar."	^(self cantBotellas * precio).! !!VendingMachine methodsFor: 'mensajes' stamp: 'francisco 5/16/2015 17:43'!cancelarCompra! !!VendingMachine methodsFor: 'mensajes' stamp: 'francisco 5/17/2015 21:31'!dineroRestante    "Devuelve el dinero que aún resta por pagar."^(self costoTotal - cashIn).! !!VendingMachine methodsFor: 'mensajes' stamp: 'francisco 5/16/2015 17:42'!confirmarCompra    "Una vez que el dinero fue ingresado, el cliente confirma que desea hacer    la compra. La máquina actualiza el stock y el dinero. "! !!VendingMachine methodsFor: 'mensajes' stamp: 'francisco 5/19/2015 16:29'!comprar: cantidadDeBotellas     "Define la cantidad de botellas que el cliente desea comprar. Devuelve true    si es posible hacer la compra, false caso contrario. "	Transcript show: ' -> Cantidad de botellas seleccionadas: '; 		show: cantidadDeBotellas;		cr; cr.					^ ((self state) comprar: cantidadDeBotellas  machine: self)ifFalse:[		Transcript show: 'La cantidad de botellas es mayor al stock... Ingrese nuevamente'.			Transcript cr.		Transcript cr.	].! !!VendingMachine methodsFor: 'mensajes' stamp: 'francisco 5/19/2015 16:43'!ingresar: unaMoneda    "El cliente ingresa en la máquina una moneda de la denominación indicada.    Devuelve true cuando alcanzó o superó el costo de la compra, false en caso    contrario."	Transcript show: ' -> Moneda ingresada : $'; 		show: unaMoneda ;		cr; cr.		( self state ingresar: unaMoneda machine: self)ifTrue: [		self state: ConfirmMachine new.		^true.		].	^false.			! !!VendingMachine methodsFor: 'mensajes' stamp: 'francisco 5/18/2015 08:30'!poseeVuelto    "Retorna si la máquina posee el dinero suficiente para dar el vuelto."^(self money > (self cashIn- self costoTotal ) )! !!VendingMachine methodsFor: 'accessing' stamp: 'francisco 5/18/2015 09:42'!cantBotellas: anObject	cantBotellas := anObject! !!VendingMachine methodsFor: 'accessing' stamp: 'francisco 5/18/2015 09:42'!precio: anObject	precio := anObject! !!VendingMachine methodsFor: 'accessing' stamp: 'francisco 5/16/2015 19:56'!stock: anObject	stock := anObject! !!VendingMachine methodsFor: 'accessing' stamp: 'francisco 5/16/2015 19:56'!money	^ money! !!VendingMachine methodsFor: 'accessing' stamp: 'francisco 5/18/2015 09:42'!precio	^ precio! !!VendingMachine methodsFor: 'accessing' stamp: 'francisco 5/16/2015 21:25'!cashIn	^ cashIn! !!VendingMachine methodsFor: 'accessing' stamp: 'francisco 5/16/2015 19:56'!money: anObject	money := anObject! !!VendingMachine methodsFor: 'accessing' stamp: 'francisco 5/18/2015 09:42'!cantBotellas	^ cantBotellas! !!VendingMachine methodsFor: 'accessing' stamp: 'francisco 5/16/2015 21:25'!cashIn: anObject	cashIn := anObject! !!VendingMachine methodsFor: 'accessing' stamp: 'francisco 5/16/2015 19:56'!stock	^ stock! !!VendingMachine methodsFor: 'accessing' stamp: 'francisco 5/16/2015 19:56'!state: anObject	state := anObject! !!VendingMachine methodsFor: 'accessing' stamp: 'francisco 5/16/2015 19:56'!state	^ state! !!VendingMachine methodsFor: 'initialization' stamp: 'francisco 5/18/2015 19:07'!initializeMoney: aMoney stock: aStock.	self money:  aMoney; state: ReadyMachine new; stock: aStock;cashIn: 0; cantBotellas: 0;precio: 2.^self.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!VendingMachine class	instanceVariableNames: ''!!VendingMachine class methodsFor: 'as yet unclassified' stamp: 'francisco 5/16/2015 21:15'!newWithMoney: aMoney andStock: aStock.	^super new initializeMoney: aMoney stock: aStock.			! !StateMachine subclass: #WaitingCoinMachine	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica3-Ejercicio 2'!!WaitingCoinMachine commentStamp: '<historical>' prior: 0!estado de la maquina en el cual espera el ingreso de monedas!!WaitingCoinMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/18/2015 19:15'!comprar: cantidadDeBotellas machine: aMachine    "Define la cantidad de botellas que el cliente desea comprar. Devuelve true    si es posible hacer la compra, false caso contrario. "Transcript show: 'No es posible ingresar cantidad de botellas en este momento... ingrese una moneda'.      Transcript cr.	Transcript cr.! !!WaitingCoinMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/16/2015 19:51'!cancelarCompra"cancela la compra sea cual sea su estado"Transcript show: 'La oprecion fue cancelada'.      Transcript cr.	Transcript cr.! !!WaitingCoinMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/16/2015 18:18'!confirmarCompra    "Una vez que el dinero fue ingresado, el cliente confirma que desea hacer    la compra. La máquina actualiza el stock y el dinero. "! !!WaitingCoinMachine methodsFor: 'as yet unclassified' stamp: 'francisco 5/19/2015 16:41'!ingresar: unaMoneda machine: aMachine    "El cliente ingresa en la máquina una moneda de la denominación indicada.    Devuelve true cuando alcanzó o superó el costo de la compra, false en caso    contrario."	aMachine cashIn: aMachine cashIn + unaMoneda.	Transcript show: 'Ingresado: ';show: aMachine cashIn; show: ' restan: '; show: aMachine dineroRestante .      Transcript cr.	Transcript cr.					^(aMachine dineroRestante <= 0)		! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!WaitingCoinMachine class	instanceVariableNames: ''!!WaitingCoinMachine class methodsFor: 'as yet unclassified' stamp: 'francisco 5/19/2015 16:39'!newTranscript show: 'Ingrese monedas de $0,50 | $1 | $2.'.Transcript  cr; cr.	^super new.	! !