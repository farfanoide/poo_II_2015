Object subclass: #Topography	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PooP2E3'!!Topography commentStamp: 'IvanKarl 4/16/2015 23:10' prior: 0!Abstract class!!Topography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 16:26'!equalsWater: aTopography	^ self waterProportion = aTopography waterProportion! !!Topography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 16:25'!equalsDirt: aTopography	^ self dirtProportion = aTopography dirtProportion! !!Topography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 16:32'!equalsMixed: aTopography	^ false! !!Topography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 21:44'!dirtProportion	^ 1 - self waterProportion! !!Topography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 16:11'!= aTopography	^ self subclassResponsibility ! !!Topography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 16:11'!waterProportion	^ self subclassResponsibility! !Topography subclass: #DirtTopography	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PooP2E3'!!DirtTopography commentStamp: 'IvanKarl 4/16/2015 23:58' prior: 0!a Dirt Topography class!!DirtTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 16:12'!= aTopography	^ aTopography equalsDirt: self.! !!DirtTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 21:45'!waterProportion	^ 0! !Topography subclass: #MixedTopography	instanceVariableNames: 'portions'	classVariableNames: ''	poolDictionaries: ''	category: 'PooP2E3'!!MixedTopography commentStamp: 'IvanKarl 4/16/2015 23:59' prior: 0!a mixed topography class!!MixedTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 16:21'!equalsWater: aTopography	^ false! !!MixedTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 21:51'!equalsMixed: aTopography	^ portions allSatisfy: [ :portion | portion = (aTopography portions at: (portions indexOf: portion)) ]! !!MixedTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 16:21'!equalsDirt: aTopography	^ false! !!MixedTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 18:12'!validateProportions	^ (self waterProportion < 1) & (self dirtProportion < 1)! !!MixedTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 21:47'!portions: anArray	portions := anArray! !!MixedTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 21:50'!portions	^ portions! !!MixedTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 16:20'!= aTopography	^ aTopography equalsMixed: self! !!MixedTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 17:04'!waterProportion		^(portions inject: 0 into: [:water :portion| water + portion waterProportion ]) / 4! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MixedTopography class	instanceVariableNames: ''!!MixedTopography class methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 22:03'!with: t1 with: t2 with: t3 with: t4	| instance |	instance := self new		portions:			(Array				with: t1				with: t2				with: t3				with: t4).	^ instance validateProportions		ifTrue: [ ^ instance yourself ]		ifFalse: [ ^ ConstructError signal: 'At least one portion must differ.' ]		"deberia levantar la excepcion dentro del validate?"! !Topography subclass: #WaterTopography	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PooP2E3'!!WaterTopography commentStamp: 'IvanKarl 4/16/2015 23:58' prior: 0!A Water topography class!!WaterTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 16:42'!= aTopography	^ aTopography equalsWater: self! !!WaterTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 00:39'!waterProportion	^ 1! !Error subclass: #ConstructError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PooP2E3'!!ConstructError commentStamp: 'IvanKarl 4/17/2015 21:54' prior: 0!Error to be raised if a Topography is wrongly constructed!TestCase subclass: #TestDirtTopography	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PooP2E3'!!TestDirtTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 17:07'!testDirtProportion	self should: [ DirtTopography new dirtProportion = 1 ].! !!TestDirtTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 17:09'!testWaterProportion	self should: [ DirtTopography new waterProportion = 0 ].! !TestCase subclass: #TestMixedTopography	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PooP2E3'!!TestMixedTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 17:46'!testDirtProportion	| mixed |	mixed := self mixedTopography.	self should: [ mixed dirtProportion closeTo: 1 / 4 ]! !!TestMixedTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 18:13'!testConstructWithVariousTopographies	self should: [ self mixedAllWaterTopography ] raise: ConstructError! !!TestMixedTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 17:46'!testWaterProportion	| mixed |	mixed := self mixedTopography.	self should: [ mixed waterProportion closeTo: 3 / 4 ]! !!TestMixedTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 21:58'!testEquals	self should: [ self mixedTopography = self mixedTopography ].	self shouldnt: [ self mixedTopography = self anotherMixedTopography ].! !!TestMixedTopography methodsFor: 'helpers' stamp: 'IvanKarl 4/17/2015 21:59'!anotherMixedTopography	^ MixedTopography		with: WaterTopography new		with: WaterTopography new		with: WaterTopography new		with: DirtTopography new! !!TestMixedTopography methodsFor: 'helpers' stamp: 'IvanKarl 4/17/2015 21:59'!mixedTopography	^ MixedTopography		with: DirtTopography new		with: WaterTopography new		with: WaterTopography new		with: WaterTopography new! !!TestMixedTopography methodsFor: 'helpers' stamp: 'IvanKarl 4/17/2015 21:59'!mixedAllWaterTopography	^ MixedTopography		with: WaterTopography new		with: WaterTopography new		with: WaterTopography new		with: WaterTopography new! !TestCase subclass: #TestTopography	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PooP2E3'!!TestTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 22:02'!testEqualsMixed	self shouldnt: [ WaterTopography new = MixedTopography new ].	self shouldnt: [ DirtTopography new = MixedTopography new ]! !!TestTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 22:01'!testEqualsWater	self should: [ WaterTopography new = WaterTopography new ]! !!TestTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 22:00'!testEqualsDirt	self should: [ DirtTopography new = DirtTopography new ].	self shouldnt: [ DirtTopography new = WaterTopography new ]! !TestCase subclass: #TestWaterTopography	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PooP2E3'!!TestWaterTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 17:09'!testDirtProportion	self should: [ WaterTopography new dirtProportion = 0 ].! !!TestWaterTopography methodsFor: 'as yet unclassified' stamp: 'IvanKarl 4/17/2015 17:09'!testWaterProportion	self should: [ WaterTopography new waterProportion = 1 ].! !