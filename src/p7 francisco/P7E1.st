Object subclass: #Shape	instanceVariableNames: 'type width'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica7-Ejercicio 1'!!Shape commentStamp: '<historical>' prior: 0!I am an abstract class that knows my bounds and if a point is contained in me.!!Shape methodsFor: 'calculations' stamp: 'francisco 6/11/2015 08:51'!area	^self subclassResponsibility .! !!Shape methodsFor: 'initialize - release' stamp: 'francisco 6/10/2015 18:42'!initializeWidth: aNumber	width := aNumber! !!Shape methodsFor: 'initialize - release' stamp: 'AR 5/17/2014 20:52'!initializeType: aType width: aNumber	type := aType.	width := aNumber! !!Shape methodsFor: 'initialize - release' stamp: 'AR 5/17/2014 20:52'!initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	^ self! !!Shape methodsFor: 'as yet unclassified' stamp: 'gvc 10/31/2006 10:48'!basicContainsPoint: aPoint	"Answer whether the receiver contains the given point."	^self bounds containsPoint: aPoint! !!Shape methodsFor: 'as yet unclassified' stamp: 'gvc 10/31/2006 10:48'!containsPoint: aPoint	"Answer whether the receiver contains the given point."	^self basicContainsPoint: aPoint! !!Shape methodsFor: 'as yet unclassified' stamp: 'gvc 10/31/2006 10:25'!bounds	"Answer a rectangle that encloses the receiver."	self subclassResponsibility! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Shape class	instanceVariableNames: ''!!Shape class methodsFor: 'instance creation' stamp: 'AR 5/17/2014 20:48'!new	"Answer a newly created and initialized instance."	^super new initialize! !!Shape class methodsFor: 'instance creation' stamp: 'AR 5/17/2014 20:49'!type: aType width: aNumber	^ self new initializeType: aType width: aNumber! !!Shape class methodsFor: 'instance creation' stamp: 'francisco 6/10/2015 18:42'!width: aNumber	^ self new initializeWidth: aNumber! !!Shape class methodsFor: 'shape types' stamp: 'AR 5/17/2014 20:50'!square ^1! !!Shape class methodsFor: 'shape types' stamp: 'AR 5/17/2014 20:50'!equilateralTriangle ^3! !!Shape class methodsFor: 'shape types' stamp: 'AR 5/17/2014 20:49'!circle ^2! !Shape subclass: #Triangulo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica7-Ejercicio 1'!!Triangulo commentStamp: '<historical>' prior: 0!Triangulo figura!!Triangulo methodsFor: 'calculations' stamp: 'francisco 6/10/2015 18:13'!area	 ^ 3 sqrt / 4 * width * width 					! !TestCase subclass: #ShapeTest	instanceVariableNames: 'cuadrado circulo paralelogramo triangulo'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica7-Ejercicio 1'!!ShapeTest methodsFor: 'testing' stamp: 'francisco 6/10/2015 18:54'!testAreaCuadrado	self assert: cuadrado area = 100.! !!ShapeTest methodsFor: 'testing' stamp: 'francisco 6/10/2015 18:53'!testAreaTriangulo	self assert: triangulo area = (3 sqrt / 4 * 10 * 10).! !!ShapeTest methodsFor: 'testing' stamp: 'francisco 6/10/2015 18:53'!testAreaParalelogramo	self assert: paralelogramo area = ((10*10)/2).! !!ShapeTest methodsFor: 'testing' stamp: 'francisco 6/10/2015 18:53'!testAreaCirculo	self assert: circulo area = (10*2*(10*2)*Float pi)! !!ShapeTest methodsFor: 'running' stamp: 'francisco 6/10/2015 18:43'!setUp	cuadrado:= Cuadrado width: 10.	circulo:= Circulo  width: 10.	triangulo:= Triangulo width: 10.	paralelogramo:= Paralelogramo  width:10.! !Shape subclass: #Cuadrado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica7-Ejercicio 1'!!Cuadrado commentStamp: '<historical>' prior: 0!Cuadrado figura!!Cuadrado methodsFor: 'calculations' stamp: 'francisco 6/10/2015 18:12'!area	^ width * width					! !Shape subclass: #Paralelogramo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica7-Ejercicio 1'!!Paralelogramo commentStamp: '<historical>' prior: 0!Paralelogramo figura!!Paralelogramo methodsFor: 'calculations' stamp: 'francisco 6/10/2015 18:12'!area	^(width *width)/2 					! !Shape subclass: #Circulo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2Practica7-Ejercicio 1'!!Circulo commentStamp: '<historical>' prior: 0!Circulo figura!!Circulo methodsFor: 'as yet unclassified' stamp: 'francisco 6/10/2015 18:41'!area	^ width * 2 * (width * 2)*Float pi.! !